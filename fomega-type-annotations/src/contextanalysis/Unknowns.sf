module contextanalysis.Unknowns

import org.sugarj.languages.Fomega

import contextanalysis.Annotations


signature
  constructors
    TyUnknown: FomegaType
    KiUnknown: FomegaKind
    IDUnknown: FomegID


// TODO: the following definitions should go to contextanalysis.rules. ...
rules // Type of expressions

  annotate-type =
    // debug(!"ANNO TYPE IN:  "); 
    (annotate-type-defined <+ annotate-type-missing)
    // ; debug(!"ANNO TYPE OUT: ") 

  annotate-type-defined = fail

  annotate-type-missing =
      ?(C, e)
    ; <put-type> (TyUnknown(), e)
    ; <add-context-errors> ( [ <concat-strings> [ "Missing typing rule for "
                                                , <write-to-string> (<strip-annos> e)
                                                , " in context "
                                                , <write-to-string> (<strip-annos> C)] ]
                           , e)


rules // Kind of types

  annotate-kind =
    // debug(!"ANNO KIND IN:  "); 
    (annotate-kind-defined <+ annotate-kind-missing)
    // ; debug(!"ANNO KIND OUT: ") 

  annotate-kind-defined = fail

  annotate-kind-missing =
      ?(C, T)
    ; <put-kind> (KiUnknown(), T)
    ; <add-context-errors> ( [ <concat-strings> [ "Missing kinding rule for "
                                                , <write-to-string> (<strip-annos> T)
                                                , " in context "
                                                , <write-to-string> (<strip-annos> C)] ]
                           , T)

rules // Type of branches

  annotate-type-branches =
    // debug(!"ANNO TYPE BRS IN:  "); 
    annotate-type-branches-defined <+ annotate-type-branches-missing
    // ; debug(!"ANNO TYPE BRS OUT: ")

  annotate-type-branches-defined = fail

  annotate-type-branches-missing =
      ?(C, decls, brs)
    ; <put-type> (TyUnknown(), brs)
    ; <add-context-errors> (["Missing branch typing rule"], brs)
