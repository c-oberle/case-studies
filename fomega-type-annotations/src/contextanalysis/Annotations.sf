module contextanalysis.Annotations


rules

  add-context-errors =
      ?(msgs, node)
    ; if !msgs; ?[] then id else <debug-analysis(!"ADD-CTX-ERRS ")> (msgs, node) end
    ; <get-context-errors> node => msgs-old
    ; <put-anno(|"context-errors", <conc> (msgs, msgs-old))> node
  
  add-fresh-context-errors =
      if oncetd(get-context-errors; not(?[]))
        then id
        else add-context-errors
      end

  get-context-errors = get-anno(|"context-errors") <+ ![]

  collect-all-context-errors = collect-all(get-context-errors); concat

  context-errors-as-alist =
    let as-alist =
      { node, errs:
          ?node
        ; <get-context-errors> node => errs
        ; if !errs; ?[] then fail else ![(node, errs)] end
      }
    in collect-all(as-alist) end

  get-kind = get-anno(|"kind")

  put-kind = ?(K, node); <put-anno(|"kind", K)> node

  get-signature = get-anno(|"signature")

  put-signature = ?(sig, node); <put-anno(|"signature", sig)> node

  get-type = get-anno(|"type")

  put-type = ?(T, node); <put-anno(|"type", T)> node

  get-context = get-anno(|"context")

  put-context = ?(C, node); <put-anno(|"context", C)> node
