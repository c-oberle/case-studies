module concretesyntax.Fomega

import org.sugarj.languages.Fomega
import org.sugarj.languages.Stratego

import concretesyntax.MetaExplode


context-free syntax
  "fomega-expr" "|[" FomegaExpr "]|" -> StrategoTerm {cons("ToMetaExpr")}
  "fomega"      "|[" FomegaExpr "]|" -> StrategoTerm {cons("ToMetaExpr")}
                "|[" FomegaExpr "]|" -> StrategoTerm {cons("ToMetaExpr")}

  "fomega-type" "|[" FomegaType "]|" -> StrategoTerm {cons("ToMetaExpr")}
  "fomega"      "|[" FomegaType "]|" -> StrategoTerm {cons("ToMetaExpr")}
                "|[" FomegaType "]|" -> StrategoTerm {cons("ToMetaExpr")}

  "fomega-branches" "|[" FomegaBranches "]|" -> StrategoTerm {cons("ToMetaExpr")}
  "fomega"          "|[" FomegaBranches "]|" -> StrategoTerm {cons("ToMetaExpr")}
                    "|[" FomegaBranches "]|" -> StrategoTerm {cons("ToMetaExpr")}

  "fomega-defs" "|[" FomegaDefs "]|" -> StrategoTerm {cons("ToMetaExpr")}
  "fomega"      "|[" FomegaDefs "]|" -> StrategoTerm {cons("ToMetaExpr")}
                "|[" FomegaDefs "]|" -> StrategoTerm {cons("ToMetaExpr")}

context-free syntax
  "~" StrategoTerm  -> StrategoId {cons("FromMetaExpr")}
  "~%" StrategoTerm -> StrategoId {cons("FromMetaExpr")}

context-free syntax
  "M~" StrategoTerm -> FomegaExpr {cons("FromMetaExpr")}
  "M~" StrategoTerm -> FomegaType {cons("FromMetaExpr")}
