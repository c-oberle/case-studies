package xml.schema;

import xml.XmlSyntax;
import xml.XmlTextTools;

import xml.schema.SharedStrategies;


public sugar XmlSchemaCompiled {

rules

  xml-validate =
    ?Element(
       ElemName(
         QName(
           Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
         , name1
         )
       )
     , attributes
     , contents
     , ElemName(
         QName(
           Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
         , name2
         )
       )
     )
    ; ({err:
         \ doc@Element(
                 ElemName(
                   QName(
                     Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                   , "schema"
                   )
                 )
               , attributes
               , contents
               , ElemName(
                   QName(
                     Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                   , "schema"
                   )
                 )
               ) -> err
           where <(validate-type-SchemaType
                   <+ ![ ( doc
                         , <concat-strings> [ "no type definition "
                                            , "SchemaType"
                                            , " for element "
                                            , "schema"
                                            , " found"
                                            ]
                         )
                       ])> doc => err \
       }
       <+ ![ ( <id>
             , <concat-strings> ["expected element: ", "schema", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
             )
           ])


rules

  validate-type-SchemaType :
    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
    where <(\ [x|xs] -> <({err:
                            \ att@Attribute(
                                    AttrName(QName(None, "targetNamespace"))
                                  , attval
                                  ) -> err
                              where <(validate-attval-type-string
                                      <+ ![ ( att
                                            , <concat-strings> [ "no type definition for "
                                                               , "string"
                                                               , " of attribute "
                                                               , "targetNamespace"
                                                               , " found"
                                                               ]
                                            )
                                          ])> attval => err \
                          }
                          <+ ![ ( <id>
                                , <concat-strings> ["expected attribute: ", "targetNamespace"]
                                )
                              ])
                         ; (is-error <+ !xs)> x \
            ; if is-error then
                id
              else
                if ?[] then
                  ![]
                else
                  is-a-list
                  < map(!(<id>, "unexpected attribute"))
                  + ![(<id>, "unexpected attribute")]
                end
                ; if is-error then id else id end
              end)> attrs => err1
          ; <(repeat-strategy(
                {x, serr:
                  ?x
                  ; \ [x|xs] -> <({err:
                                    \ doc@Element(
                                            ElemName(
                                              QName(
                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                              , "element"
                                              )
                                            )
                                          , attributes
                                          , contents
                                          , ElemName(
                                              QName(
                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                              , "element"
                                              )
                                            )
                                          ) -> err
                                      where <(validate-type-ElementType
                                              <+ ![ ( doc
                                                    , <concat-strings> [ "no type definition "
                                                                       , "ElementType"
                                                                       , " for element "
                                                                       , "element"
                                                                       , " found"
                                                                       ]
                                                    )
                                                  ])> doc => err \
                                  }
                                  <+ ![ ( <id>
                                        , <concat-strings> ["expected element: ", "element", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                        )
                                      ])
                                 ; (is-error <+ !xs)> x \
                  ; ?serr
                  ; if is-error then
                      !x
                      ; {x, serr:
                          ?x
                          ; \ [x|xs] -> <({err:
                                            \ doc@Element(
                                                    ElemName(
                                                      QName(
                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                      , "complexType"
                                                      )
                                                    )
                                                  , attributes
                                                  , contents
                                                  , ElemName(
                                                      QName(
                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                      , "complexType"
                                                      )
                                                    )
                                                  ) -> err
                                              where <(validate-type-ComplexType
                                                      <+ ![ ( doc
                                                            , <concat-strings> [ "no type definition "
                                                                               , "ComplexType"
                                                                               , " for element "
                                                                               , "complexType"
                                                                               , " found"
                                                                               ]
                                                            )
                                                          ])> doc => err \
                                          }
                                          <+ ![ ( <id>
                                                , <concat-strings> ["expected element: ", "complexType", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                                )
                                              ])
                                         ; (is-error <+ !xs)> x \
                          ; ?serr
                          ; if is-error then
                              !x
                              ; {x, serr:
                                  ?x
                                  ; \ [x|xs] -> <({err:
                                                    \ doc@Element(
                                                            ElemName(
                                                              QName(
                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                              , "simpleType"
                                                              )
                                                            )
                                                          , attributes
                                                          , contents
                                                          , ElemName(
                                                              QName(
                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                              , "simpleType"
                                                              )
                                                            )
                                                          ) -> err
                                                      where <(validate-type-SimpleType
                                                              <+ ![ ( doc
                                                                    , <concat-strings> [ "no type definition "
                                                                                       , "SimpleType"
                                                                                       , " for element "
                                                                                       , "simpleType"
                                                                                       , " found"
                                                                                       ]
                                                                    )
                                                                  ])> doc => err \
                                                  }
                                                  <+ ![ ( <id>
                                                        , <concat-strings> ["expected element: ", "simpleType", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                                        )
                                                      ])
                                                 ; (is-error <+ !xs)> x \
                                  ; ?serr
                                  ; if is-error then !x ; fail <+ !serr else id end
                                }
                              <+ !serr
                            else
                              id
                            end
                        }
                      <+ !serr
                    else
                      id
                    end
                }
              )
              ; if is-error then
                  id
                else
                  if ?[] then
                    ![]
                  else
                    is-a-list
                    < map(!(<id>, "unexpected element"))
                    + ![(<id>, "unexpected element")]
                  end
                  ; if is-error then id else id end
                end)> cs => err2


rules

  validate-type-ComplexType :
    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
    where <(\ [x|xs] -> <({err:
                            \ att@Attribute(
                                    AttrName(QName(None, "name"))
                                  , attval
                                  ) -> err
                              where <(validate-attval-type-string
                                      <+ ![ ( att
                                            , <concat-strings> [ "no type definition for "
                                                               , "string"
                                                               , " of attribute "
                                                               , "name"
                                                               , " found"
                                                               ]
                                            )
                                          ])> attval => err \
                          }
                          <+ ![ ( <id>
                                , <concat-strings> ["expected attribute: ", "name"]
                                )
                              ])
                         ; (is-error <+ !xs)> x \
            ; if is-error then
                id
              else
                if ?[] then
                  ![]
                else
                  is-a-list
                  < map(!(<id>, "unexpected attribute"))
                  + ![(<id>, "unexpected attribute")]
                end
                ; if is-error then id else id end
              end)> attrs => err1
          ; <(({x, serr:
                 ?x
                 ; \ [x|xs] -> <({err:
                                   \ doc@Element(
                                           ElemName(
                                             QName(
                                               Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                             , "choice"
                                             )
                                           )
                                         , attributes
                                         , contents
                                         , ElemName(
                                             QName(
                                               Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                             , "choice"
                                             )
                                           )
                                         ) -> err
                                     where <(validate-type-ComplexTypeNested
                                             <+ ![ ( doc
                                                   , <concat-strings> [ "no type definition "
                                                                      , "ComplexTypeNested"
                                                                      , " for element "
                                                                      , "choice"
                                                                      , " found"
                                                                      ]
                                                   )
                                                 ])> doc => err \
                                 }
                                 <+ ![ ( <id>
                                       , <concat-strings> ["expected element: ", "choice", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                       )
                                     ])
                                ; (is-error <+ !xs)> x \
                 ; ?serr
                 ; if is-error then
                     !x
                     ; {x, serr:
                         ?x
                         ; \ [x|xs] -> <({err:
                                           \ doc@Element(
                                                   ElemName(
                                                     QName(
                                                       Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                     , "choice"
                                                     )
                                                   )
                                                 , attributes
                                                 , contents
                                                 , ElemName(
                                                     QName(
                                                       Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                     , "choice"
                                                     )
                                                   )
                                                 ) -> err
                                             where <(validate-type-ComplexTypeNestedMax
                                                     <+ ![ ( doc
                                                           , <concat-strings> [ "no type definition "
                                                                              , "ComplexTypeNestedMax"
                                                                              , " for element "
                                                                              , "choice"
                                                                              , " found"
                                                                              ]
                                                           )
                                                         ])> doc => err \
                                         }
                                         <+ ![ ( <id>
                                               , <concat-strings> ["expected element: ", "choice", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                               )
                                             ])
                                        ; (is-error <+ !xs)> x \
                         ; ?serr
                         ; if is-error then
                             !x
                             ; {x, serr:
                                 ?x
                                 ; \ [x|xs] -> <({err:
                                                   \ doc@Element(
                                                           ElemName(
                                                             QName(
                                                               Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                             , "sequence"
                                                             )
                                                           )
                                                         , attributes
                                                         , contents
                                                         , ElemName(
                                                             QName(
                                                               Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                             , "sequence"
                                                             )
                                                           )
                                                         ) -> err
                                                     where <(validate-type-ComplexTypeNested
                                                             <+ ![ ( doc
                                                                   , <concat-strings> [ "no type definition "
                                                                                      , "ComplexTypeNested"
                                                                                      , " for element "
                                                                                      , "sequence"
                                                                                      , " found"
                                                                                      ]
                                                                   )
                                                                 ])> doc => err \
                                                 }
                                                 <+ ![ ( <id>
                                                       , <concat-strings> ["expected element: ", "sequence", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                                       )
                                                     ])
                                                ; (is-error <+ !xs)> x \
                                 ; ?serr
                                 ; if is-error then
                                     !x
                                     ; {x, serr:
                                         ?x
                                         ; \ [x|xs] -> <({err:
                                                           \ doc@Element(
                                                                   ElemName(
                                                                     QName(
                                                                       Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                                     , "sequence"
                                                                     )
                                                                   )
                                                                 , attributes
                                                                 , contents
                                                                 , ElemName(
                                                                     QName(
                                                                       Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                                     , "sequence"
                                                                     )
                                                                   )
                                                                 ) -> err
                                                             where <(validate-type-ComplexTypeNestedMax
                                                                     <+ ![ ( doc
                                                                           , <concat-strings> [ "no type definition "
                                                                                              , "ComplexTypeNestedMax"
                                                                                              , " for element "
                                                                                              , "sequence"
                                                                                              , " found"
                                                                                              ]
                                                                           )
                                                                         ])> doc => err \
                                                         }
                                                         <+ ![ ( <id>
                                                               , <concat-strings> ["expected element: ", "sequence", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                                               )
                                                             ])
                                                        ; (is-error <+ !xs)> x \
                                         ; ?serr
                                         ; if is-error then !x ; fail <+ !serr else id end
                                       }
                                     <+ !serr
                                   else
                                     id
                                   end
                               }
                             <+ !serr
                           else
                             id
                           end
                       }
                     <+ !serr
                   else
                     id
                   end
               }
               ; if is-error then
                   id
                 else
                   repeat-strategy(
                     \ [x|xs] -> <({err:
                                     \ doc@Element(
                                             ElemName(
                                               QName(
                                                 Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                               , "attribute"
                                               )
                                             )
                                           , attributes
                                           , contents
                                           , ElemName(
                                               QName(
                                                 Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                               , "attribute"
                                               )
                                             )
                                           ) -> err
                                       where <(validate-type-AttributeType
                                               <+ ![ ( doc
                                                     , <concat-strings> [ "no type definition "
                                                                        , "AttributeType"
                                                                        , " for element "
                                                                        , "attribute"
                                                                        , " found"
                                                                        ]
                                                     )
                                                   ])> doc => err \
                                   }
                                   <+ ![ ( <id>
                                         , <concat-strings> ["expected element: ", "attribute", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                         )
                                       ])
                                  ; (is-error <+ !xs)> x \
                     ; if is-error then id else id end
                   )
                   ; if is-error then id else id end
                 end)
              ; if is-error then
                  id
                else
                  if ?[] then
                    ![]
                  else
                    is-a-list
                    < map(!(<id>, "unexpected element"))
                    + ![(<id>, "unexpected element")]
                  end
                  ; if is-error then id else id end
                end)> cs => err2


rules

  validate-type-ComplexTypeNested :
    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
    where <(if ?[] then
              ![]
            else
              is-a-list
              < map(!(<id>, "unexpected attribute"))
              + ![(<id>, "unexpected attribute")]
            end
            ; if is-error then id else id end)> attrs => err1
          ; <(repeat-strategy(
                {x, serr:
                  ?x
                  ; \ [x|xs] -> <({err:
                                    \ doc@Element(
                                            ElemName(
                                              QName(
                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                              , "choice"
                                              )
                                            )
                                          , attributes
                                          , contents
                                          , ElemName(
                                              QName(
                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                              , "choice"
                                              )
                                            )
                                          ) -> err
                                      where <(validate-type-ComplexTypeNested
                                              <+ ![ ( doc
                                                    , <concat-strings> [ "no type definition "
                                                                       , "ComplexTypeNested"
                                                                       , " for element "
                                                                       , "choice"
                                                                       , " found"
                                                                       ]
                                                    )
                                                  ])> doc => err \
                                  }
                                  <+ ![ ( <id>
                                        , <concat-strings> ["expected element: ", "choice", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                        )
                                      ])
                                 ; (is-error <+ !xs)> x \
                  ; ?serr
                  ; if is-error then
                      !x
                      ; {x, serr:
                          ?x
                          ; \ [x|xs] -> <({err:
                                            \ doc@Element(
                                                    ElemName(
                                                      QName(
                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                      , "choice"
                                                      )
                                                    )
                                                  , attributes
                                                  , contents
                                                  , ElemName(
                                                      QName(
                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                      , "choice"
                                                      )
                                                    )
                                                  ) -> err
                                              where <(validate-type-ComplexTypeNestedMax
                                                      <+ ![ ( doc
                                                            , <concat-strings> [ "no type definition "
                                                                               , "ComplexTypeNestedMax"
                                                                               , " for element "
                                                                               , "choice"
                                                                               , " found"
                                                                               ]
                                                            )
                                                          ])> doc => err \
                                          }
                                          <+ ![ ( <id>
                                                , <concat-strings> ["expected element: ", "choice", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                                )
                                              ])
                                         ; (is-error <+ !xs)> x \
                          ; ?serr
                          ; if is-error then
                              !x
                              ; {x, serr:
                                  ?x
                                  ; \ [x|xs] -> <({err:
                                                    \ doc@Element(
                                                            ElemName(
                                                              QName(
                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                              , "sequence"
                                                              )
                                                            )
                                                          , attributes
                                                          , contents
                                                          , ElemName(
                                                              QName(
                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                              , "sequence"
                                                              )
                                                            )
                                                          ) -> err
                                                      where <(validate-type-ComplexTypeNested
                                                              <+ ![ ( doc
                                                                    , <concat-strings> [ "no type definition "
                                                                                       , "ComplexTypeNested"
                                                                                       , " for element "
                                                                                       , "sequence"
                                                                                       , " found"
                                                                                       ]
                                                                    )
                                                                  ])> doc => err \
                                                  }
                                                  <+ ![ ( <id>
                                                        , <concat-strings> ["expected element: ", "sequence", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                                        )
                                                      ])
                                                 ; (is-error <+ !xs)> x \
                                  ; ?serr
                                  ; if is-error then
                                      !x
                                      ; {x, serr:
                                          ?x
                                          ; \ [x|xs] -> <({err:
                                                            \ doc@Element(
                                                                    ElemName(
                                                                      QName(
                                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                                      , "sequence"
                                                                      )
                                                                    )
                                                                  , attributes
                                                                  , contents
                                                                  , ElemName(
                                                                      QName(
                                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                                      , "sequence"
                                                                      )
                                                                    )
                                                                  ) -> err
                                                              where <(validate-type-ComplexTypeNestedMax
                                                                      <+ ![ ( doc
                                                                            , <concat-strings> [ "no type definition "
                                                                                               , "ComplexTypeNestedMax"
                                                                                               , " for element "
                                                                                               , "sequence"
                                                                                               , " found"
                                                                                               ]
                                                                            )
                                                                          ])> doc => err \
                                                          }
                                                          <+ ![ ( <id>
                                                                , <concat-strings> ["expected element: ", "sequence", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                                                )
                                                              ])
                                                         ; (is-error <+ !xs)> x \
                                          ; ?serr
                                          ; if is-error then
                                              !x
                                              ; {x, serr:
                                                  ?x
                                                  ; \ [x|xs] -> <({err:
                                                                    \ doc@Element(
                                                                            ElemName(
                                                                              QName(
                                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                                              , "element"
                                                                              )
                                                                            )
                                                                          , attributes
                                                                          , contents
                                                                          , ElemName(
                                                                              QName(
                                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                                              , "element"
                                                                              )
                                                                            )
                                                                          ) -> err
                                                                      where <(validate-type-ElementType
                                                                              <+ ![ ( doc
                                                                                    , <concat-strings> [ "no type definition "
                                                                                                       , "ElementType"
                                                                                                       , " for element "
                                                                                                       , "element"
                                                                                                       , " found"
                                                                                                       ]
                                                                                    )
                                                                                  ])> doc => err \
                                                                  }
                                                                  <+ ![ ( <id>
                                                                        , <concat-strings> ["expected element: ", "element", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                                                        )
                                                                      ])
                                                                 ; (is-error <+ !xs)> x \
                                                  ; ?serr
                                                  ; if is-error then !x ; fail <+ !serr else id end
                                                }
                                              <+ !serr
                                            else
                                              id
                                            end
                                        }
                                      <+ !serr
                                    else
                                      id
                                    end
                                }
                              <+ !serr
                            else
                              id
                            end
                        }
                      <+ !serr
                    else
                      id
                    end
                }
              )
              ; if is-error then
                  id
                else
                  if ?[] then
                    ![]
                  else
                    is-a-list
                    < map(!(<id>, "unexpected element"))
                    + ![(<id>, "unexpected element")]
                  end
                  ; if is-error then id else id end
                end)> cs => err2


rules

  validate-type-ComplexTypeNestedMax :
    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
    where <(\ [x|xs] -> <({err:
                            \ att@Attribute(
                                    AttrName(QName(None, "maxOccurs"))
                                  , attval
                                  ) -> err
                              where <(validate-attval-type-string
                                      <+ ![ ( att
                                            , <concat-strings> [ "no type definition for "
                                                               , "string"
                                                               , " of attribute "
                                                               , "maxOccurs"
                                                               , " found"
                                                               ]
                                            )
                                          ])> attval => err \
                          }
                          <+ ![ ( <id>
                                , <concat-strings> ["expected attribute: ", "maxOccurs"]
                                )
                              ])
                         ; (is-error <+ !xs)> x \
            ; if is-error then
                id
              else
                if ?[] then
                  ![]
                else
                  is-a-list
                  < map(!(<id>, "unexpected attribute"))
                  + ![(<id>, "unexpected attribute")]
                end
                ; if is-error then id else id end
              end)> attrs => err1
          ; <(repeat-strategy(
                {x, serr:
                  ?x
                  ; \ [x|xs] -> <({err:
                                    \ doc@Element(
                                            ElemName(
                                              QName(
                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                              , "choice"
                                              )
                                            )
                                          , attributes
                                          , contents
                                          , ElemName(
                                              QName(
                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                              , "choice"
                                              )
                                            )
                                          ) -> err
                                      where <(validate-type-ComplexTypeNested
                                              <+ ![ ( doc
                                                    , <concat-strings> [ "no type definition "
                                                                       , "ComplexTypeNested"
                                                                       , " for element "
                                                                       , "choice"
                                                                       , " found"
                                                                       ]
                                                    )
                                                  ])> doc => err \
                                  }
                                  <+ ![ ( <id>
                                        , <concat-strings> ["expected element: ", "choice", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                        )
                                      ])
                                 ; (is-error <+ !xs)> x \
                  ; ?serr
                  ; if is-error then
                      !x
                      ; {x, serr:
                          ?x
                          ; \ [x|xs] -> <({err:
                                            \ doc@Element(
                                                    ElemName(
                                                      QName(
                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                      , "choice"
                                                      )
                                                    )
                                                  , attributes
                                                  , contents
                                                  , ElemName(
                                                      QName(
                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                      , "choice"
                                                      )
                                                    )
                                                  ) -> err
                                              where <(validate-type-ComplexTypeNestedMax
                                                      <+ ![ ( doc
                                                            , <concat-strings> [ "no type definition "
                                                                               , "ComplexTypeNestedMax"
                                                                               , " for element "
                                                                               , "choice"
                                                                               , " found"
                                                                               ]
                                                            )
                                                          ])> doc => err \
                                          }
                                          <+ ![ ( <id>
                                                , <concat-strings> ["expected element: ", "choice", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                                )
                                              ])
                                         ; (is-error <+ !xs)> x \
                          ; ?serr
                          ; if is-error then
                              !x
                              ; {x, serr:
                                  ?x
                                  ; \ [x|xs] -> <({err:
                                                    \ doc@Element(
                                                            ElemName(
                                                              QName(
                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                              , "sequence"
                                                              )
                                                            )
                                                          , attributes
                                                          , contents
                                                          , ElemName(
                                                              QName(
                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                              , "sequence"
                                                              )
                                                            )
                                                          ) -> err
                                                      where <(validate-type-ComplexTypeNested
                                                              <+ ![ ( doc
                                                                    , <concat-strings> [ "no type definition "
                                                                                       , "ComplexTypeNested"
                                                                                       , " for element "
                                                                                       , "sequence"
                                                                                       , " found"
                                                                                       ]
                                                                    )
                                                                  ])> doc => err \
                                                  }
                                                  <+ ![ ( <id>
                                                        , <concat-strings> ["expected element: ", "sequence", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                                        )
                                                      ])
                                                 ; (is-error <+ !xs)> x \
                                  ; ?serr
                                  ; if is-error then
                                      !x
                                      ; {x, serr:
                                          ?x
                                          ; \ [x|xs] -> <({err:
                                                            \ doc@Element(
                                                                    ElemName(
                                                                      QName(
                                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                                      , "sequence"
                                                                      )
                                                                    )
                                                                  , attributes
                                                                  , contents
                                                                  , ElemName(
                                                                      QName(
                                                                        Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                                      , "sequence"
                                                                      )
                                                                    )
                                                                  ) -> err
                                                              where <(validate-type-ComplexTypeNestedMax
                                                                      <+ ![ ( doc
                                                                            , <concat-strings> [ "no type definition "
                                                                                               , "ComplexTypeNestedMax"
                                                                                               , " for element "
                                                                                               , "sequence"
                                                                                               , " found"
                                                                                               ]
                                                                            )
                                                                          ])> doc => err \
                                                          }
                                                          <+ ![ ( <id>
                                                                , <concat-strings> ["expected element: ", "sequence", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                                                )
                                                              ])
                                                         ; (is-error <+ !xs)> x \
                                          ; ?serr
                                          ; if is-error then
                                              !x
                                              ; {x, serr:
                                                  ?x
                                                  ; \ [x|xs] -> <({err:
                                                                    \ doc@Element(
                                                                            ElemName(
                                                                              QName(
                                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                                              , "element"
                                                                              )
                                                                            )
                                                                          , attributes
                                                                          , contents
                                                                          , ElemName(
                                                                              QName(
                                                                                Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                                                              , "element"
                                                                              )
                                                                            )
                                                                          ) -> err
                                                                      where <(validate-type-ElementType
                                                                              <+ ![ ( doc
                                                                                    , <concat-strings> [ "no type definition "
                                                                                                       , "ElementType"
                                                                                                       , " for element "
                                                                                                       , "element"
                                                                                                       , " found"
                                                                                                       ]
                                                                                    )
                                                                                  ])> doc => err \
                                                                  }
                                                                  <+ ![ ( <id>
                                                                        , <concat-strings> ["expected element: ", "element", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                                                        )
                                                                      ])
                                                                 ; (is-error <+ !xs)> x \
                                                  ; ?serr
                                                  ; if is-error then !x ; fail <+ !serr else id end
                                                }
                                              <+ !serr
                                            else
                                              id
                                            end
                                        }
                                      <+ !serr
                                    else
                                      id
                                    end
                                }
                              <+ !serr
                            else
                              id
                            end
                        }
                      <+ !serr
                    else
                      id
                    end
                }
              )
              ; if is-error then
                  id
                else
                  if ?[] then
                    ![]
                  else
                    is-a-list
                    < map(!(<id>, "unexpected element"))
                    + ![(<id>, "unexpected element")]
                  end
                  ; if is-error then id else id end
                end)> cs => err2


rules

  validate-type-ElementType :
    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
    where <(\ [x|xs] -> <({err:
                            \ att@Attribute(
                                    AttrName(QName(None, "name"))
                                  , attval
                                  ) -> err
                              where <(validate-attval-type-string
                                      <+ ![ ( att
                                            , <concat-strings> [ "no type definition for "
                                                               , "string"
                                                               , " of attribute "
                                                               , "name"
                                                               , " found"
                                                               ]
                                            )
                                          ])> attval => err \
                          }
                          <+ ![ ( <id>
                                , <concat-strings> ["expected attribute: ", "name"]
                                )
                              ])
                         ; (is-error <+ !xs)> x \
            ; if is-error then
                id
              else
                \ [x|xs] -> <({err:
                                \ att@Attribute(
                                        AttrName(QName(None, "type"))
                                      , attval
                                      ) -> err
                                  where <(validate-attval-type-string
                                          <+ ![ ( att
                                                , <concat-strings> [ "no type definition for "
                                                                   , "string"
                                                                   , " of attribute "
                                                                   , "type"
                                                                   , " found"
                                                                   ]
                                                )
                                              ])> attval => err \
                              }
                              <+ ![ ( <id>
                                    , <concat-strings> ["expected attribute: ", "type"]
                                    )
                                  ])
                             ; (is-error <+ !xs)> x \
                ; if is-error then
                    id
                  else
                    if ?[] then
                      ![]
                    else
                      is-a-list
                      < map(!(<id>, "unexpected attribute"))
                      + ![(<id>, "unexpected attribute")]
                    end
                    ; if is-error then id else id end
                  end
              end)> attrs => err1
          ; <(id
              ; if is-error then
                  id
                else
                  if ?[] then
                    ![]
                  else
                    is-a-list
                    < map(!(<id>, "unexpected element"))
                    + ![(<id>, "unexpected element")]
                  end
                  ; if is-error then id else id end
                end)> cs => err2


rules

  validate-type-AttributeType :
    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
    where <(\ [x|xs] -> <({err:
                            \ att@Attribute(
                                    AttrName(QName(None, "name"))
                                  , attval
                                  ) -> err
                              where <(validate-attval-type-string
                                      <+ ![ ( att
                                            , <concat-strings> [ "no type definition for "
                                                               , "string"
                                                               , " of attribute "
                                                               , "name"
                                                               , " found"
                                                               ]
                                            )
                                          ])> attval => err \
                          }
                          <+ ![ ( <id>
                                , <concat-strings> ["expected attribute: ", "name"]
                                )
                              ])
                         ; (is-error <+ !xs)> x \
            ; if is-error then
                id
              else
                \ [x|xs] -> <({err:
                                \ att@Attribute(
                                        AttrName(QName(None, "type"))
                                      , attval
                                      ) -> err
                                  where <(validate-attval-type-string
                                          <+ ![ ( att
                                                , <concat-strings> [ "no type definition for "
                                                                   , "string"
                                                                   , " of attribute "
                                                                   , "type"
                                                                   , " found"
                                                                   ]
                                                )
                                              ])> attval => err \
                              }
                              <+ ![ ( <id>
                                    , <concat-strings> ["expected attribute: ", "type"]
                                    )
                                  ])
                             ; (is-error <+ !xs)> x \
                ; if is-error then
                    id
                  else
                    if ?[] then
                      ![]
                    else
                      is-a-list
                      < map(!(<id>, "unexpected attribute"))
                      + ![(<id>, "unexpected attribute")]
                    end
                    ; if is-error then id else id end
                  end
              end)> attrs => err1
          ; <(id
              ; if is-error then
                  id
                else
                  if ?[] then
                    ![]
                  else
                    is-a-list
                    < map(!(<id>, "unexpected element"))
                    + ![(<id>, "unexpected element")]
                  end
                  ; if is-error then id else id end
                end)> cs => err2


rules

  validate-type-SimpleType :
    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
    where <(\ [x|xs] -> <({err:
                            \ att@Attribute(
                                    AttrName(QName(None, "name"))
                                  , attval
                                  ) -> err
                              where <(validate-attval-type-string
                                      <+ ![ ( att
                                            , <concat-strings> [ "no type definition for "
                                                               , "string"
                                                               , " of attribute "
                                                               , "name"
                                                               , " found"
                                                               ]
                                            )
                                          ])> attval => err \
                          }
                          <+ ![ ( <id>
                                , <concat-strings> ["expected attribute: ", "name"]
                                )
                              ])
                         ; (is-error <+ !xs)> x \
            ; if is-error then
                id
              else
                if ?[] then
                  ![]
                else
                  is-a-list
                  < map(!(<id>, "unexpected attribute"))
                  + ![(<id>, "unexpected attribute")]
                end
                ; if is-error then id else id end
              end)> attrs => err1
          ; <((\ [x|xs] -> <({err:
                               \ doc@Element(
                                       ElemName(
                                         QName(
                                           Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                         , "restriction"
                                         )
                                       )
                                     , attributes
                                     , contents
                                     , ElemName(
                                         QName(
                                           Some(URIPrefix("http://www.w3.org/2001/XMLSchema"))
                                         , "restriction"
                                         )
                                       )
                                     ) -> err
                                 where <(validate-type-RestrictionType
                                         <+ ![ ( doc
                                               , <concat-strings> [ "no type definition "
                                                                  , "RestrictionType"
                                                                  , " for element "
                                                                  , "restriction"
                                                                  , " found"
                                                                  ]
                                               )
                                             ])> doc => err \
                             }
                             <+ ![ ( <id>
                                   , <concat-strings> ["expected element: ", "restriction", " of namespace: ", "http://www.w3.org/2001/XMLSchema"]
                                   )
                                 ])
                            ; (is-error <+ !xs)> x \
               ; if is-error then id else id end)
              ; if is-error then
                  id
                else
                  if ?[] then
                    ![]
                  else
                    is-a-list
                    < map(!(<id>, "unexpected element"))
                    + ![(<id>, "unexpected element")]
                  end
                  ; if is-error then id else id end
                end)> cs => err2


rules

  validate-type-RestrictionType :
    Element(name1, attrs, cs, name2) -> <conc> (err1, err2)
    where <(\ [x|xs] -> <({err:
                            \ att@Attribute(
                                    AttrName(QName(None, "base"))
                                  , attval
                                  ) -> err
                              where <(validate-attval-type-string
                                      <+ ![ ( att
                                            , <concat-strings> [ "no type definition for "
                                                               , "string"
                                                               , " of attribute "
                                                               , "base"
                                                               , " found"
                                                               ]
                                            )
                                          ])> attval => err \
                          }
                          <+ ![ ( <id>
                                , <concat-strings> ["expected attribute: ", "base"]
                                )
                              ])
                         ; (is-error <+ !xs)> x \
            ; if is-error then
                id
              else
                if ?[] then
                  ![]
                else
                  is-a-list
                  < map(!(<id>, "unexpected attribute"))
                  + ![(<id>, "unexpected attribute")]
                end
                ; if is-error then id else id end
              end)> attrs => err1
          ; <(id
              ; if is-error then
                  id
                else
                  if ?[] then
                    ![]
                  else
                    is-a-list
                    < map(!(<id>, "unexpected element"))
                    + ![(<id>, "unexpected element")]
                  end
                  ; if is-error then id else id end
                end)> cs => err2


rules

  validate-type-string :
    Element(name1, attrs, [c], name2) -> err
    where <chardata2string> c => cstring
          ; <(validate-base-string
              <+ ?(t, val)
                 ; !( t
                    , <concat-strings> ["no base type definition ", "string", " for value ", val, " found"]
                    ))> (c, cstring) => err

  validate-type-string :
    Element(name1, attrs, cs, name2) -> [ ( c
                                          , <concat-strings> ["type mismatch: expected character data, found ", <write-to-string> cs]
                                          )
                                        ]
    where <(not(?[c])
            + ?[c] ; not(chardata2string))> cs

  validate-attval-type-string :
    attr -> err
    where <xml-attr-value2string> attr => attrstring
          ; <(validate-base-string
              <+ ?(t, val)
                 ; !( t
                    , <concat-strings> ["no base type definition ", "string", " for value ", val, " found"]
                    ))> (attr, attrstring) => err
}