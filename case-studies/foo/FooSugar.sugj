package foo;

import org.sugarj.languages.Java;
   
/**
 * SugarJ extension that saves one character
 * by introducing a new 'nil' keyword in place
 * of the old four-letter 'null' keyword.
 */
public sugar FooSugar {
  context-free syntax
    "nil" -> JavaLiteral {cons("Foo"), prefer}
    FooTypeId -> JavaTypeName {cons("TypeName"), prefer}
    FooTypeName -> FooTypeId {cons("MyId")}
    
  lexical syntax
    "TYPE" -> FooTypeName
    "TYPE" -> JavaId {reject}
    
  
  signature constructors
    Foo : Literal
    MyId : String -> FooTypeId
  
  desugarings
    \ Foo -> Null \
    \ MyId(s) -> Id("String") \
    
  rules
    constraint-error : 
      Foo -> (<id>, "don't use nil, stupid")
  
  
  // foo declarations
  context-free syntax
    AnnoOrSugarMod* "foo" JavaId "{" "}" -> SugarDec {cons("FooDec")}
  
  signature constructors
    FooDec : List(AnnoOrSugarMod) * JavaId -> SugarDec
  
  desugarings
    desugar-foodec-alt
  
  rules
    desugar-foodec :
      FooDec(mods, name) -> SugarDec(SugarDecHead(mods, name), SugarBody([]))
    
    desugar-foodec2 :
      FooDec(mods, name) -> EditorServicesDec(EditorServicesDecHead(mods, name), EditorServicesBody([]))
    
    desugar-foodec-alt :
      foo@FooDec(mods, name) -> [<desugar-foodec> foo, <desugar-foodec2> foo]
}
   