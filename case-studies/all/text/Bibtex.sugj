package text;

import org.sugarj.languages.Plain;

import editor.Colors;
import concretesyntax.EditorServices;

public sugar Bibtex {
  context-free syntax
    AnnoOrSugarMod* "bibtex" JavaId BibtexBody -> ToplevelDeclaration{cons("BibtexDec")}
    "{" BibtexStm* "}" -> BibtexBody {cons("BibtexBody")}
    
    BibtexStringKeyword "{" BibtexConstName "=" "{" BibtexValue "}" "}" -> BibtexStm {cons("BibtexStringStm")}
    BibtexEntryKeyword "{" BibtexEntryName Commas {BibtexAttribute ","}* Commas "}" -> BibtexStm {cons("BibtexEntryStm")}
    
    BibtexID -> BibtexConstName {cons("BibtexConstName")}
    BibtexID -> BibtexEntryName {cons("BibtexEntryName")}
    BibtexID -> BibtexAttributeName {cons("BibtexAttributeName")}
    
    BibtexAttributeName "=" "{" BibtexValue "}" -> BibtexAttribute {cons("BibtexAttribute")}
    BibtexAttributeName "=" BibtexID -> BibtexAttribute {cons("BibtexAttributeUnwrapped")}

  lexical syntax
    [\@][sS][tT][rR][iI][nN][gG] -> BibtexStringKeyword
    [\,]* -> Commas
    [a-zA-Z\_\--\/0-9\:\.\&]+ -> BibtexID 
    
    [\@][a-zA-Z]* -> BibtexEntryKeyword
    [\@][sS][tT][rR][iI][nN][gG] -> BibtexEntryKeyword {reject}
    
    ~[\{\}]* -> BibtexValue
    ~[\{\}]* "{" BibtexValue "}" BibtexValue -> BibtexValue
  
  desugarings
    desugar-bibtex 
  
  rules
    desugar-bibtex :
      BibtexDec(mods, n, BibtexBody(stms))
      ->
      [PlainDec(PlainDecHead(mods, n, Some("bib")), PlainBody(<map(pp-bibtex); concat-strings> stms)),
       EditorServicesDec(EditorServicesDecHead(mods, n), EditorServicesBody(<filter(bibtex-to-service)> stms)),
       SugarDec(SugarDecHead(mods, n), SugarBody(<filter(bibtex-to-sugar)> stms))]
     
    pp-bibtex :
      BibtexStringStm(keyword, BibtexConstName(var), val)
      -> 
      <concat-strings> [keyword, "{", var, "=", "{", val, "}", "}", "\n"]
    
    pp-bibtex :
      BibtexEntryStm(keyword, BibtexEntryName(n), _, attrs, _)
      ->
      <concat-strings> [keyword, "{", n, ",", "\n", attrs-string, "}\n"]
      where
        <map(pp-bibtex-attr); concat-strings> attrs => attrs-string
      
    
    pp-bibtex-attr :
      BibtexAttributeUnwrapped(BibtexAttributeName(attr), val)
      ->
      <concat-strings> [attr, " = ", val, "\n"]
    
    pp-bibtex-attr :
      BibtexAttribute(BibtexAttributeName(attr), val)
      ->
      <concat-strings> [attr, " = ", "{", val, "}", "\n"]
    
    
  rules
    bibtex-to-service :
      BibtexEntryStm(_, BibtexEntryName(n), _, attrs, _)
      ->
      |[
        completions
          completion template : BibtexEntryName = string~n
      ]|
  
  rules
    bibtex-to-sugar :
      BibtexEntryStm(_, BibtexEntryName(n), _, attrs, _)
      ->
      transformation-elem(Rules([SDefNoArgs("bibtex-entry", Match(NoAnnoList(Str(n))))]))
}

public editor services Bibtex {
  colorer
    BibtexStringKeyword : blue
    BibtexEntryKeyword : blue
    BibtexAttributeName : darkorange
    BibtexConstName : turquoise
    BibtexEntryName : turquoise
    BibtexValue : black
    
    turquoise = 24 150 150
    
  folding
    BibtexStm
  
  outliner
    _.BibtexConstName
    BibtexEntryName
}