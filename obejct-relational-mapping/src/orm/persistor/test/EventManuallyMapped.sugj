package orm.persistor.test;

import java.util.Date;

import orm.persistor.test.Event;
import orm.persistor.test.EventMapping;

import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

@Entity
@Table(name="EVENTS")
public class EventManuallyMapped {
	// underlying object
	private Event entity;
	
	// synthesized attribute
	private long ID;
	
	// deserialization buffer
	private java.util.HashMap<String,Object> buffer;
	
	public EventManuallyMapped() {
		buffer = new java.util.HashMap<String,Object>();
	}

	public EventManuallyMapped(String title, Date date) {
		entity = new Event(title, date);
		setID(generate_ID());
	}
	
	private long generate_ID() {
		synchronized (EventMapping.class) {
			orm.persistor.test.EventMapping.nextId = orm.persistor.test.EventMapping.nextId + 1;
			return EventMapping.nextId;
		}
	}

	private long date_encode(Date date) {
		return date.getTime();
	}
	
	private Date date_decode(long stamp) {
		return new Date(stamp);
	}


	private void tryLoadEntity() {
		if (buffer.containsKey("title") && buffer.containsKey("date")) {
			entity = new Event((String) buffer.get("title"), (Date) buffer.get("date"));
			buffer = null;	
		}
	}

	@Id
    public long getID() {
		return ID;
    }

    private void setID(long ID) {
		this.ID = ID;
    }

    public long getEVENT_DATE() {
		return date_encode(entity.getDate());
    }

    public void setEVENT_DATE(long EVENT_DATE) {
    	if (entity != null)
			entity.setDate(date_decode(EVENT_DATE));
		else {
			buffer.put("date", date_decode(EVENT_DATE));
			tryLoadEntity();
		}
    }

    public String getTITLE() {
		return entity.getTitle();
    }

    public void setTITLE(String TITLE) {
    	if (entity != null)
			entity.setTitle(TITLE);
		else {
			buffer.put("title", TITLE);
			tryLoadEntity();
		}
    }
    

	// forward methods from `Event
	@Transient    
    public Date getDate() {
		return entity.getDate();
    }
	@Transient
    public void setDate(Date date) {
		entity.setDate(date);
    }
	@Transient
    public String getTitle() {
		return entity.getTitle();
    }
	@Transient
    public void setTitle(String title) {
		entity.setTitle(title);
    }
	@Transient
    public boolean isProcessed() {
		return entity.isProcessed();
    }
	@Transient
    public void setProcessed(boolean processed) {
		entity.setProcessed(processed);
    }
}