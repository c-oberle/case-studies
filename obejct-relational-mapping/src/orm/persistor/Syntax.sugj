package orm.persistor;

public extension Syntax {
	context-free syntax
		Entity -> ToplevelDeclaration
		AnnoOrExtensionMod* "mapping" JavaId "{" MappingBody "}" -> Entity {cons("MappingDec")}
		TableDec JavaFieldDec* MappingRule* -> MappingBody {cons("MappingBody")}
	
	context-free syntax
		"table" JavaStringLiteral ";" -> TableDec {cons("TableDec")}
		
		// "$" JavaID -> ColumnId {cons("ColumnId")}
		
	// lexical syntax
	// 	"construct" -> JavaID {reject}
	// 	"$" JavaID -> JavaID {reject}
	// context-free syntax
	// 	ColumnId -> JavaExpr
	// 	"construct" "(" {JavaExpr ","}* ")" -> JavaExpr {cons("ConstructInstance")}
	// 	"load" "action" "=" ValDef ";" -> ActionDec {cons("ActionDec")}
	
	context-free syntax
		"column" JavaID ":" JavaType "="  "{" RelSpec* "}" -> MappingRule {cons("MappingRule")}
		"synthesized" "column" JavaID ":" JavaType "="  "{" RelSpec* "}" -> MappingRule {cons("SynMappingRule")}
		
		"primary" "key" ";" -> RelSpec {cons("PrimaryKey")}
		
		"init" "=" ValDef ";" -> RelSpec {cons("InitSpec")}
		
		"persist" "(" JavaId ")" "=" ValDef ";" -> RelSpec {cons("PersistSpec")}
		"load" "(" JavaId "," JavaId ")" "=" ValDef ";" -> RelSpec {cons("LoadSpec")}
		
		JavaExpr -> ValDef {cons("ExprVal")}
		"{" JavaBlockStm* JavaExpr "}" -> ValDef {cons("BlockVal")}
		
}